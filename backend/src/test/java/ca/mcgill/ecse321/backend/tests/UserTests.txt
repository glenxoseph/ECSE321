/*package ca.mcgill.ecse321.backend.tests;

import java.util.List;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import ca.mcgill.ecse321.backend.jpa.*;
import ca.mcgill.ecse321.backend.dao.*;
import ca.mcgill.ecse321.backend.service.BackendService;

import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.ArgumentMatchers.anyInt;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import ca.mcgill.ecse321.backend.dao.UserRepository.*;

import java.lang.Math;

@RunWith(SpringRunner.class)
@SpringBootTest
public class UserTests {

	@Autowired
	private UserRepository userDao;

	@Autowired
	private BackendService service;
	
	@After
	public void clearDatabase() {
		// First, we clear registrations to avoid exceptions due to inconsistencies
		userDao.deleteAll();
	}

    @Test  
    public void testCreateUser() {
        assertEquals(0, service.getAllUsers().size());		
		int id = 123;
		int aTime = anyInt();
		Company company = new Company();
		company.setName("name");
		company.setOpenTime(aTime);
		company.setCloseTime(aTime + anyInt());
		company.setCompanyId(anyInt());
		

		try {
			service.createUser(id, company, "name", "password");
		} catch(IllegalArgumentException e) {
			// Check that no error occured
			fail();
		}
	    
	    	//assertEquals(1, service.getAllUsers().size());
	    	//List<User> users = service.getAllUsers();

		//assertEquals(id, users.get(0).getUserId());
		//assertEquals(company, users.get(0).getCompany());
		//assertEquals(userName, users.get(0).getUserName());
		//assertEquals(password, users.get(0).getPassword());
    }
}*/